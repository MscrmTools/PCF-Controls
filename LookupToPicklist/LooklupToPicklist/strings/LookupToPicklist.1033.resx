<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Control_Display_Name_Key" xml:space="preserve">
    <value>Lookup to Dropdown list v9</value>
    <comment/>
  </data>
  <data name="Control_Description_Key" xml:space="preserve">
    <value>Displays Lookup column as a Dropdown list</value>
    <comment/>
  </data>
  <data name="lookup_Display_Key" xml:space="preserve">
    <value>Lookup column</value>
    <comment/>
  </data>
  <data name="lookup_Desc_Key" xml:space="preserve">
    <value>Lookup column this control is mapped to</value>
    <comment/>
  </data>
  <data name="attributemask_Display_Key" xml:space="preserve">
    <value>Display mask</value>
    <comment/>
  </data>
  <data name="attributemask_Desc_Key" xml:space="preserve">
    <value>Mask that indicates which column to use for display. If empty, primary name of the table is used. Use code {lcid} to include user interface language code</value>
    <comment/>
  </data>
  <data name="sortByName_Display_Key" xml:space="preserve">
    <value>Sort by display name</value>
    <comment/>
  </data>
  <data name="sortByName_Desc_Key" xml:space="preserve">
    <value>Indicates if sorting is based on display name or selected view order</value>
    <comment/>
  </data>
  <data name="yes_Display_Key" xml:space="preserve">
    <value>Yes</value>
    <comment/>
  </data>
  <data name="yes_Desc_Key" xml:space="preserve">
    <value>Sorted by display name</value>
    <comment/>
  </data>
  <data name="no_Display_Key" xml:space="preserve">
    <value>No</value>
    <comment/>
  </data>
  <data name="no_Desc_Key" xml:space="preserve">
    <value>Sorted by selected view order</value>
    <comment/>
  </data>
  <data name="AddNew_Display_Key" xml:space="preserve">
    <value>Add new</value>
    <comment/>
  </data>
  <data name="addNew_Display_Key" xml:space="preserve">
    <value>Allow record creation</value>
    <comment/>
  </data>
  <data name="addNew_Desc_Key" xml:space="preserve">
    <value>Allow user to create new records from the dropdown. Requires appropriate privileges</value>
    <comment/>
  </data>
  <data name="dependantLookup_Display_Key" xml:space="preserve">
    <value>Filtering column</value>
    <comment/>
  </data>
  <data name="dependantLookup_Desc_Key" xml:space="preserve">
    <value>Set the Lookup column to use to filter this control. Must be the same Lookup than the one defined in this control filter configuration</value>
    <comment/>
  </data>
  <data name="addSearch_Display_Key" xml:space="preserve">
    <value>Display Search bar</value>
    <comment/>
  </data>
  <data name="recentItems" xml:space="preserve">
    <value>Recent items</value>
    <comment/>
  </data>
  <data name="searchPlaceHolder" xml:space="preserve">
    <value>Search</value>
    <comment/>
  </data>
  <data name="favorites" xml:space="preserve">
    <value>Favorites</value>
    <comment/>
  </data>
  <data name="favorites_Display_Key" xml:space="preserve">
    <value>Favorites</value>
    <comment/>
  </data>
  <data name="favorites_Desc_Key" xml:space="preserve">
    <value>List of records unique identifiers to show as favorites</value>
    <comment/>
  </data>
  <data name="mruSize_Display_Key" xml:space="preserve">
    <value>Number of recent items</value>
    <comment/>
  </data>
  <data name="mruSize_Desc_Key" xml:space="preserve">
    <value>Indicates the number of recent items to display</value>
    <comment/>
  </data>
  <data name="addSearch_Desc_Key" xml:space="preserve">
    <value>Indicates if a search bar must be added on top of the dropdown</value>
    <comment/>
  </data>
  <data name="dependantLookupTargetColumn_Display_Key" xml:space="preserve">
    <value>Filtering target column</value>
    <comment/>
  </data>
  <data name="dependantLookupTargetColumn_Desc_Key" xml:space="preserve">
    <value>Filtering targeted table column to use. Use this only if the logical name of the Filtering column is different from the targeted table primary id column</value>
    <comment/>
  </data>
</root>